{"ast":null,"code":"import _defineProperty from \"C:/Users/User/Desktop/frontend/LoginApp/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n// import * as mysql from 'mysql';\n// @Injectable\nexport class UserService {\n  constructor() {\n    _defineProperty(this, \"mysql\", require('mysql2'));\n    _defineProperty(this, \"connection\", this.mysql.createConnection({\n      host: 'localhost',\n      user: 'root',\n      password: 'root',\n      database: 'users'\n    }));\n    this.connection.connect(error => {\n      if (error) {\n        console.error('Error connecting to the database:', error);\n      } else {\n        console.log('Connected to the database');\n      }\n    });\n  }\n  methd() {\n    const sql = 'SELECT * FROM usersinfo';\n    this.connection.query(sql, (error, results, fields) => {\n      if (error) {\n        console.error('Error executing query:', error);\n      } else {\n        console.log('Query results:', results);\n        console.log('Fields:', fields);\n      }\n    });\n  }\n}","map":{"version":3,"names":["UserService","constructor","_defineProperty","require","mysql","createConnection","host","user","password","database","connection","connect","error","console","log","methd","sql","query","results","fields"],"sources":["C:\\Users\\User\\Desktop\\frontend\\LoginApp\\src\\app\\userService.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\n// import * as mysql from 'mysql';\r\n\r\n\r\n// @Injectable\r\nexport class UserService{\r\n  mysql = require('mysql2');\r\n   connection = this.mysql.createConnection({\r\n    host: 'localhost',\r\n    user: 'root',\r\n    password: 'root',\r\n    database: 'users',\r\n  });\r\n\r\n \r\nconstructor(){\r\n\r\n  this.connection.connect((error: mysql.MysqlError) => {\r\n    if (error) {\r\n      console.error('Error connecting to the database:', error);\r\n    } else {\r\n      console.log('Connected to the database');\r\n    }\r\n  });\r\n}\r\n  \r\nmethd(){\r\n  const sql = 'SELECT * FROM usersinfo';\r\n\r\n this.connection.query(sql, (error: mysql.MysqlError | null, results: any[], fields: mysql.FieldInfo[]) => {\r\n  if (error) {\r\n    console.error('Error executing query:', error);\r\n  } else {\r\n    console.log('Query results:', results);\r\n    console.log('Fields:', fields);\r\n  }\r\n});\r\n}\r\n\r\n\r\n    \r\n}"],"mappings":";AACA;AAGA;AACA,OAAM,MAAOA,WAAW;EAUxBC,YAAA;IAAAC,eAAA,gBATUC,OAAO,CAAC,QAAQ,CAAC;IAAAD,eAAA,qBACX,IAAI,CAACE,KAAK,CAACC,gBAAgB,CAAC;MACxCC,IAAI,EAAE,WAAW;MACjBC,IAAI,EAAE,MAAM;MACZC,QAAQ,EAAE,MAAM;MAChBC,QAAQ,EAAE;KACX,CAAC;IAKF,IAAI,CAACC,UAAU,CAACC,OAAO,CAAEC,KAAuB,IAAI;MAClD,IAAIA,KAAK,EAAE;QACTC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;OAC1D,MAAM;QACLC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;;IAE5C,CAAC,CAAC;EACJ;EAEAC,KAAKA,CAAA;IACH,MAAMC,GAAG,GAAG,yBAAyB;IAEtC,IAAI,CAACN,UAAU,CAACO,KAAK,CAACD,GAAG,EAAE,CAACJ,KAA8B,EAAEM,OAAc,EAAEC,MAAyB,KAAI;MACxG,IAAIP,KAAK,EAAE;QACTC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;OAC/C,MAAM;QACLC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEI,OAAO,CAAC;QACtCL,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEK,MAAM,CAAC;;IAElC,CAAC,CAAC;EACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}