{"ast":null,"code":"import _defineProperty from \"C:/Users/User/Desktop/frontend/loginapp/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let LoginComponent = class LoginComponent {\n  constructor(userSer, router, formBuilder) {\n    _defineProperty(this, \"userSer\", void 0);\n    _defineProperty(this, \"router\", void 0);\n    _defineProperty(this, \"formBuilder\", void 0);\n    _defineProperty(this, \"errorMessage\", void 0);\n    _defineProperty(this, \"loginForm\", void 0);\n    _defineProperty(this, \"pwrdtype\", \"password\");\n    _defineProperty(this, \"eye\", \"bi bi-eye\");\n    this.userSer = userSer;\n    this.router = router;\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      uname: ['', Validators.required],\n      upass: ['', Validators.required]\n    });\n  }\n  onClick() {\n    this.userSer.postUser(this.loginForm.value.uname, this.loginForm.value.upass).subscribe(res => {\n      var uname2 = this.loginForm.value.uname;\n      if (res.message) {\n        this.errorMessage = res.message;\n      } else {\n        this.errorMessage = '';\n        if (uname2 === 'admin') {\n          this.router.navigate(['/admin']);\n        } else if (uname2 === 'user') {\n          this.router.navigate(['/user']);\n        } else if (uname2 === 'manager') {\n          this.router.navigate(['/manager']);\n        } else if (uname2 === 'programmer' || uname2 === 'developer') {\n          this.router.navigate(['/programmer']);\n        }\n      }\n    }, error => {});\n  }\n  icon(pwrd) {\n    if (pwrd.type === \"password\") {\n      this.pwrdtype = \"text\";\n      this.eye = \"bi bi-eye-slash\";\n    } else {\n      this.pwrdtype = \"password\";\n      this.eye = \"bi bi-eye\";\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","Validators","LoginComponent","constructor","userSer","router","formBuilder","_defineProperty","ngOnInit","loginForm","group","uname","required","upass","onClick","postUser","value","subscribe","res","uname2","message","errorMessage","navigate","error","icon","pwrd","type","pwrdtype","eye","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\User\\Desktop\\frontend\\loginapp\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../userService';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit{\n  \n  errorMessage!:string;\n  loginForm!: FormGroup;\n  pwrdtype:string=\"password\";\n  eye:string=\"bi bi-eye\";\n\n\n  constructor(private userSer: UserService, private router: Router, private formBuilder: FormBuilder){\n\n  }\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      uname: ['', Validators.required],\n      upass: ['', Validators.required]\n    }\n      )\n      \n  }\n\nonClick(){\n  this.userSer.postUser(this.loginForm.value.uname, this.loginForm.value.upass).subscribe((res:any)=>{\n    var uname2 = this.loginForm.value.uname;\n    if(res.message){\n      this.errorMessage= res.message;\n    }else{\n      this.errorMessage='';\n      if(uname2==='admin'){\n        this.router.navigate(['/admin'])\n      }else if(uname2==='user'){\n        this.router.navigate(['/user'])\n      }else if(uname2==='manager'){\n        this.router.navigate(['/manager'])\n      }else if(uname2==='programmer' || uname2==='developer'){\n        this.router.navigate(['/programmer'])\n      }\n\n    }\n  },(error)=>{});\n  \n}\n\n\nicon(pwrd:any){\n  if (pwrd.type===\"password\"){\n    this.pwrdtype=\"text\";\n    this.eye= \"bi bi-eye-slash\";\n  }else{\n    this.pwrdtype=\"password\";\n    this.eye= \"bi bi-eye\";\n  \n  }\n \n\n}\n}"],"mappings":";;AAAA,SAASA,SAAS,QAAgB,eAAe;AAGjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAQ5D,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAQzBC,YAAoBC,OAAoB,EAAUC,MAAc,EAAUC,WAAwB;IAAAC,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA,mBAJlF,UAAU;IAAAA,eAAA,cACf,WAAW;IAGF,KAAAH,OAAO,GAAPA,OAAO;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,WAAW,GAAXA,WAAW;EAErF;EACAE,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACtCC,KAAK,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACW,QAAQ,CAAC;MAChCC,KAAK,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACW,QAAQ;KAChC,CACE;EAEL;EAEFE,OAAOA,CAAA;IACL,IAAI,CAACV,OAAO,CAACW,QAAQ,CAAC,IAAI,CAACN,SAAS,CAACO,KAAK,CAACL,KAAK,EAAE,IAAI,CAACF,SAAS,CAACO,KAAK,CAACH,KAAK,CAAC,CAACI,SAAS,CAAEC,GAAO,IAAG;MACjG,IAAIC,MAAM,GAAG,IAAI,CAACV,SAAS,CAACO,KAAK,CAACL,KAAK;MACvC,IAAGO,GAAG,CAACE,OAAO,EAAC;QACb,IAAI,CAACC,YAAY,GAAEH,GAAG,CAACE,OAAO;OAC/B,MAAI;QACH,IAAI,CAACC,YAAY,GAAC,EAAE;QACpB,IAAGF,MAAM,KAAG,OAAO,EAAC;UAClB,IAAI,CAACd,MAAM,CAACiB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;SACjC,MAAK,IAAGH,MAAM,KAAG,MAAM,EAAC;UACvB,IAAI,CAACd,MAAM,CAACiB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;SAChC,MAAK,IAAGH,MAAM,KAAG,SAAS,EAAC;UAC1B,IAAI,CAACd,MAAM,CAACiB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;SACnC,MAAK,IAAGH,MAAM,KAAG,YAAY,IAAIA,MAAM,KAAG,WAAW,EAAC;UACrD,IAAI,CAACd,MAAM,CAACiB,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;;;IAI3C,CAAC,EAAEC,KAAK,IAAG,CAAC,CAAC,CAAC;EAEhB;EAGAC,IAAIA,CAACC,IAAQ;IACX,IAAIA,IAAI,CAACC,IAAI,KAAG,UAAU,EAAC;MACzB,IAAI,CAACC,QAAQ,GAAC,MAAM;MACpB,IAAI,CAACC,GAAG,GAAE,iBAAiB;KAC5B,MAAI;MACH,IAAI,CAACD,QAAQ,GAAC,UAAU;MACxB,IAAI,CAACC,GAAG,GAAE,WAAW;;EAKzB;CACC;AAvDY1B,cAAc,GAAA2B,UAAA,EAL1B7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACW9B,cAAc,CAuD1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}