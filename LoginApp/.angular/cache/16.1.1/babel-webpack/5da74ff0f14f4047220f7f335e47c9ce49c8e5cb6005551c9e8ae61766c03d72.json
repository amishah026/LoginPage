{"ast":null,"code":"// @Injectable\nexport class UserService {\n  constructor() {\n    this.mysql = require('mysql2');\n    this.connection = this.mysql.createConnection({\n      host: 'localhost',\n      user: 'your_username',\n      password: 'your_password',\n      database: 'your_database'\n    });\n    // Connect to the MySQL server\n  }\n}\n// Connect to the MySQL server\nthis.connection.connect(err => {\n  if (err) {\n    console.error('Error connecting to MySQL:', err);\n    return;\n  }\n  console.log('Connected to MySQL server');\n});\n// Example query\nconst query = 'SELECT * FROM your_table';\nthis.connection.query(query, (err, results) => {\n  if (err) {\n    console.error('Error executing query:', err);\n    return;\n  }\n  console.log('Query results:', results);\n});","map":{"version":3,"names":["UserService","constructor","mysql","require","connection","createConnection","host","user","password","database","connect","err","console","error","log","query","results"],"sources":["C:\\Users\\User\\Desktop\\frontend\\LoginApp\\src\\app\\userService.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\n\r\n\r\n\r\n// @Injectable\r\nexport class UserService{\r\n\r\n  const mysql = require('mysql2');\r\n\r\n  const connection = this.mysql.createConnection({\r\n    host: 'localhost',\r\n    user: 'your_username',\r\n    password: 'your_password',\r\n    database: 'your_database',\r\n  });\r\n  \r\n  // Connect to the MySQL server\r\n  this.connection.connect((err:any) => {\r\n    if (err) {\r\n      console.error('Error connecting to MySQL:', err);\r\n      return;\r\n    }\r\n    console.log('Connected to MySQL server');\r\n  });\r\n\r\n  // Example query\r\nconst query = 'SELECT * FROM your_table';\r\nthis.connection.query(query, (err, results) => {\r\n  if (err) {\r\n    console.error('Error executing query:', err);\r\n    return;\r\n  }\r\n  console.log('Query results:', results);\r\n});\r\n\r\n\r\n\r\n    \r\n}"],"mappings":"AAIA;AACA,OAAM,MAAOA,WAAW;EAAxBC,YAAA;IAEQ,KAAAC,KAAK,GAAGC,OAAO,CAAC,QAAQ,CAAC;IAEzB,KAAAC,UAAU,GAAG,IAAI,CAACF,KAAK,CAACG,gBAAgB,CAAC;MAC7CC,IAAI,EAAE,WAAW;MACjBC,IAAI,EAAE,eAAe;MACrBC,QAAQ,EAAE,eAAe;MACzBC,QAAQ,EAAE;KACX,CAAC;IAEF;EACA;;AADA;AACA,IAAI,CAACL,UAAU,CAACM,OAAO,CAAEC,GAAO,IAAI;EAClC,IAAIA,GAAG,EAAE;IACPC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC;IAChD;;EAEFC,OAAO,CAACE,GAAG,CAAC,2BAA2B,CAAC;AAC1C,CAAC,CAAC;AAEF;AACF,MAAMC,KAAK,GAAG,0BAA0B;AACxC,IAAI,CAACX,UAAU,CAACW,KAAK,CAACA,KAAK,EAAE,CAACJ,GAAG,EAAEK,OAAO,KAAI;EAC5C,IAAIL,GAAG,EAAE;IACPC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;IAC5C;;EAEFC,OAAO,CAACE,GAAG,CAAC,gBAAgB,EAAEE,OAAO,CAAC;AACxC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}